on:
    push:
        branches:
            - staging

permissions:
    contents: write
    pull-requests: write

name: 📦 Create New Beta Release

jobs:
    checks:
        name: ✅ Check for Release
        runs-on: ubuntu-latest
        timeout-minutes: 15

        env:
            HUSKY: 0

        steps:
            - name: 📀 Check out code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: 🧪 Check out repository code
              uses: ./.github/workflows/health-check

    release:
        name: 📦 Release Beta Version
        runs-on: ubuntu-latest
        timeout-minutes: 60
        needs:
            - checks

        env:
            HUSKY: 0

        steps:
            - name: 📀 Check out code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: 🗃️ Install Node.js Deps
              run: |
                  npm install --legacy-peer-deps

            - name: 🔨 Build Check
              run: |
                  npm run build

            - name: Create a new version
              run: |
                  git config --global user.email "github-actions[bot]@gmail.com"
                  git config --global user.name "github-actions[bot]"
                  npx standard-version --prerelease beta --skip.tag --skip.changelog
                  git push --follow-tags origin staging

            - name: 🔨 Build Package
              run: |
                  npm run pack

            - name: 🤐 Archive pack file
              uses: thedoctor0/zip-release@master
              with:
                  path: ./bin/*
                  filename: pack.zip

            - name: Extract version from package.json
              id: get_version
              run: |
                  echo "::set-output name=version::$(jq -r '.version' package.json)"

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ steps.get_version.outputs.version }}
                  release_name: v${{ steps.get_version.outputs.version }}
                  prerelease: true

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./pack.zip
                  asset_name: cli-v${{ steps.get_version.outputs.version }}.zip
                  asset_content_type: application/zip
